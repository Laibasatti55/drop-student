#include <iostream>
#include <string>

using namespace std;

class Course {
private:
    string  Name;
    string* students;
    int numStudents;
    int maxStudents;

public:
    // Constructor
    Course(const string& name, int max) : Name(name), numStudents(0), maxStudents(max) {
        students = new string[maxStudents];
    }

    // Deep copy constructor
    Course(const Course& other) : Name(other.Name), numStudents(other.numStudents), maxStudents(other.maxStudents) {
        students = new string[maxStudents];
        for (int i = 0; i < numStudents; ++i) {
            students[i] = other.students[i];
        }
    }
// https://github.com/Laibasatti55/drop-student.git

    // Destructor
    ~Course() {
        delete[] students;
    }

    // Function to get the course name
    string getCourseName() const {
        return Name;
    }

    // Function to add a new student
    void addStudent(const string& studentName) {
        if (numStudents < maxStudents) {
            students[numStudents] = studentName;
            ++numStudents;
        } else {
            cout << "Course is full. Cannot add more students." << endl;
        }
    }

    // Function to drop a student
    void dropStudent(const string& studentName) {
        for (int i = 0; i < numStudents; ++i) {
            if (students[i] == studentName) {
                // Shift remaining elements to fill the gap
                for (int j = i; j < numStudents - 1; ++j) {
                    students[j] = students[j + 1];
                }
                --numStudents;
                return; // Student found and dropped
            }
        }
        cout << "Student not found in the course." << endl;
    }

    // Function to get the array of students
    const string* getStudents() const {
        return students;
    }

    // Function to get the number of students
    int getNumStudents() const {
        return numStudents;
    }
};

int main() {
    // Example usage in the main function
    Course course1("Math", 3);
    course1.addStudent("Alice");
course1.addStudent("Bob");

    // Deep copy using copy constructor
    Course course2 = course1;

    // Drop a student from course2
    course2.dropStudent("Alice");

    // Output course names and students
    cout << "Course 1: " << course1.getCourseName() << endl;
    cout << "Students in Course 1: ";
    for (int i = 0; i < course1.getNumStudents(); ++i) {
        cout << course1.getStudents()[i] << " ";
    }
    cout << endl;

    cout << "Course 2: " << course2.getCourseName() << endl;
    cout << "Students in Course 2: ";
    for (int i = 0; i < course2.getNumStudents(); ++i) {
        cout << course2.getStudents()[i] << " ";
    }
    cout << endl;

    return 0;
}

